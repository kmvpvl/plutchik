openapi: '3.0.2'
info:
  title: Plutchik API
  version: '1.0'
servers:
  - url: http://localhost:8000
    description: Local server
  - url: https://5dfbb146-c21e-4b30-b009-2b34abadefb3.mock.pstmn.io
    description: Postman server

components:
  securitySchemes:
    PlutchikAuthOrganizationId:
      type: apiKey
      in: header
      name: organizationid
    PlutchikAuthOrganizationKey:
      type: apiKey
      in: header
      name: organizationkey
    PlutchikAuthUserId:
      type: apiKey
      in: header
      name: uid
    PlutchikAuthSessionToken:
      type: apiKey
      in: header
      name: PlutchikAuthSessionToken
  schemas:
    version:
      type: object
      properties:
        api:
          type: string
          pattern: ^(\d+\.)?(\d+\.)?(\d+)$
        data:
          type: string
          pattern: ^(\d+\.)?(\d+\.)?(\d+)$
        ai:
          type: string
          pattern: ^(\d+\.)?(\d+\.)?(\d+)$
    user:
      type: object
      properties:
        uid:
          type: string
          description: Uniq user's id at Plutchik
          pattern: ^[0-9a-fA-F]{24}$
          nullable: true
        organizationid:
          type: string
          pattern: ^[0-9a-fA-F]{24}$
          description: Uniq organization id at Plutchik
          nullable: false
        birthdate:
          type: string
          pattern: ^\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$
          description: Birthdate of user
          nullable: true
        nativelanguage:
          type: string
          description: User's nativa language
          nullable: true
        secondlanguages:
          description: All second or foreign languages of user
          type: array
          items:
            type: string
          nullable: true
        location:
          description: Location of user (city, country of coord location) 
          type: string
          nullable: true
        gender:
          description: User's gender (any trad gender or combination)
          type: string
          nullable: true
        maritalstatus:
          type: string
          description: Marital status of user as one wants using
          nullable: true
        features:
          type: string
          nullable: true
        blocked:
          description: Is user banned?
          type: boolean
          nullable: false
    contentitem:
      type: object
      properties:
        cid:
          description: Uniq id of content item
          type: string
          pattern: ^[0-9a-fA-F]{24}$
          nullable: true
        type:
          description: Type of content
          type: string
          enum: [text, audio, video, mem]
          nullable: false
        name:
          description: Content of item, can be HTML
          type: string
          nullable: true
        description:
          description: Content of item, can be HTML
          type: string
          nullable: true
        url:
          description: Reference to external content
          type: string
          nullable: true
        blocked:
          description: Is content blocked?
          type: boolean
          nullable: false
        expire:
          type: string
          pattern: ^((?:(\d{4}-\d{2}-\d{2})T(\d{2}:\d{2}:\d{2}(?:\.\d+)?))(Z|[\+-]\d{2}:\d{2})?)$
        validfrom:
          type: string
          pattern: ^((?:(\d{4}-\d{2}-\d{2})T(\d{2}:\d{2}:\d{2}(?:\.\d+)?))(Z|[\+-]\d{2}:\d{2})?)$
    assessment:
      type: object
      properties:
        uid:
          description: User uniq id
          type: string
          pattern: ^[0-9a-fA-F]{24}$
          nullable: true
        cid:
          type: string
          pattern: ^[0-9a-fA-F]{24}$
        vector:
          type: object
          properties:
            joy:
              type: number
              format: float
              minimum: 0
              maximum: 1
              nullable: true
            trust:
              type: number
              format: float
              minimum: 0
              maximum: 1
              nullable: true
            fear:
              type: number
              format: float
              minimum: 0
              maximum: 1
              nullable: true
            surprise:
              type: number
              format: float
              minimum: 0
              maximum: 1
              nullable: true
            disgust:
              type: number
              format: float
              minimum: 0
              maximum: 1
              nullable: true
            sadness:
              type: number
              format: float
              minimum: 0
              maximum: 1
              nullable: true
            anger:
              type: number
              format: float
              minimum: 0
              maximum: 1
              nullable: true
            anticipation:
              type: number
              format: float
              minimum: 0
              maximum: 1
              nullable: true
        created:
          type: string
          pattern: ^((?:(\d{4}-\d{2}-\d{2})T(\d{2}:\d{2}:\d{2}(?:\.\d+)?))(Z|[\+-]\d{2}:\d{2})?)$
  responses:
    NotFound:
      description: 'Not found'
      content:
        application/json:
          schema: {}
    NotAuthorized:
      description: 'Not authorized'
      content:
        application/json:
          schema: {}
  parameters:
    organizationid:
      name: organizationid
      in: header
      required: true
      description: Uniq organization id
      schema: 
        type: string
        pattern: ^[0-9a-fA-F]{24}$
      example: 63c0e7dad80176886c22129d
    organizationkey:
      name: organizationkey
      in: header
      required: true
      description: Secret organization key
      schema: 
        type: string
        pattern: ^[0-9a-fA-F]{24}$
      example: 63c13287808a659be295092e
    sessiontoken:
      name: PlutchikAuthSessionToken
      in: header
      required: true
      description: Session token
      schema:
        type: string
        pattern: ^[0-9a-fA-F]{24}$
    userinfo:
      name: userinfo
      in: query
      schema:
        $ref: "#/components/schemas/user"
      #style: deepObject
      #explode: false
    contentinfo:
      name: contentinfo
      in: query
      schema:
        $ref: "#/components/schemas/contentitem"
    assessmentinfo:
      name: assessmentinfo
      in: query
      schema:
        $ref: "#/components/schemas/assessment"
      #explode: false
    uid: 
      name: uid
      in: header
      required: true
      description: Uniq user id
      schema:
        type: string
        pattern: ^[0-9a-fA-F]{24}$
    cid: 
      name: cid
      in: path
      required: true
      description: Uniq content id
      schema:
        type: string
        pattern: ^[0-9a-fA-F]{24}$
    eid: 
      name: eid
      in: path
      required: true
      description: Uniq assessment id
      schema:
        type: string
        pattern: ^[0-9a-fA-F]{24}$
paths:
  /version:
    get:
      description: Reveal versions of components
      operationId: version
      security: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/version"
              example:
                api: 1.0.0
                data: 1.0.0
                ai: 0.0.1
  /createorganization:
    post:
      description: Creates new organization and returns first organization key with administrator roles
      operationId: createorganization
      security: []
      parameters:
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: emails
          schema:
            type: array
            items: 
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  organizationid:
                    type: string
                    pattern: ^[0-9a-fA-F]{24}$
                  organizationkey:
                    type: string
                    pattern: ^[0-9a-fA-F]{24}$
  /getsessiontoken:
    get:
      description: Returns session token by authorization
      operationId: getsessiontoken
      security:
        - PlutchikAuthOrganizationId: []
          PlutchikAuthOrganizationKey: []
          PlutchikAuthUserId: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                pattern: ^[0-9a-fA-F]{24}$
                example:
                  63c12e625c80a49f1b08ad71
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /adduser:
    post:
      description: Add new user from organization
      operationId: adduser
      security:
        - PlutchikAuthOrganizationId: []
          PlutchikAuthOrganizationKey: []
      tags:
        - user
        - new content
      parameters:
        - $ref: "#/components/parameters/userinfo"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /addorganizationkey:
    post:
      description: Add new organizationkey with exect roles
      operationId: addorganizationkey
      security:
        - PlutchikAuthOrganizationId: []
          PlutchikAuthOrganizationKey: []
      parameters:
        - in: query
          name: name
          schema:
            type: string
          #required: true
        - in: query
          name: roles
          schema:
            type: array
            items: 
              type: string
          #required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /removeorganizationkey:
    post:
      description: Remove organizationkey permanently
      operationId: removeorganizationkey
      security:
        - PlutchikAuthOrganizationId: []
          PlutchikAuthOrganizationKey: []
      parameters:
        - in: query
          name: id
          schema:
            type: string
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /organizationkeyslist:
    get:
      description: Reveals all organizationkey s
      operationId: organizationkeyslist
      security:
        - PlutchikAuthOrganizationId: []
          PlutchikAuthOrganizationKey: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    keyname: 
                      type: string
                    id:
                      type: number
                    roles:
                      type: array
                      items: 
                        type: string
                    created:
                      type: string
                      pattern: ^((?:(\d{4}-\d{2}-\d{2})T(\d{2}:\d{2}:\d{2}(?:\.\d+)?))(Z|[\+-]\d{2}:\d{2})?)$
                    expired:
                      type: string
                      pattern: ^((?:(\d{4}-\d{2}-\d{2})T(\d{2}:\d{2}:\d{2}(?:\.\d+)?))(Z|[\+-]\d{2}:\d{2})?)$
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /userinfo:
    description: Reveal user information
    get:
      tags:
        - user
        - read
      security:
        - PlutchikAuth: []
      parameters:
        - $ref: "#/components/parameters/uid"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
              example:
                uid: 63c13295808a659be295092f
                organizationid: 63c13295808a659be295092f
                useridinorganization: 00000080880675
                birthdate: 1995-11-03
                nativelanguage: Polska
                secondlanguages: [english, german]
                location: Warsaw
                gender: female
                maritalstatus: single
                features: hobby, cats
                blocked: false
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /unblockuser:
    get:
      operationId: unblockuser
      security:
        - PlutchikAuthOrganizationId: []
          PlutchikAuthOrganizationKey: []
          PlutchikAuthUserId: []
      parameters: []
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /blockuser:
    get:
      operationId: blockuser
      security:
        - PlutchikAuthOrganizationId: []
          PlutchikAuthOrganizationKey: []
          PlutchikAuthUserId: []
      parameters: []
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /addcontent:
    description: Add new content item
    post:
      operationId: addcontent
      security:
        - PlutchikAuthOrganizationId: []
          PlutchikAuthOrganizationKey: []
      parameters:
        - $ref: "#/components/parameters/contentinfo"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contentitem"
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /blockcontent/{cid}:
    get:
      operationId: blockcontent
      security:
        - PlutchikAuthOrganizationId: []
          PlutchikAuthOrganizationKey: []
      parameters:
        - $ref: "#/components/parameters/cid"
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /unblockcontent/{cid}:
    get:
      operationId: unblockcontent
      security:
        - PlutchikAuthOrganizationId: []
          PlutchikAuthOrganizationKey: []
      parameters: 
        - $ref: "#/components/parameters/cid"
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /addassessment:
    description: Add new assessment
    post:
      operationId: addassessment
      security:
        - PlutchikAuthUserId: []
          PlutchikAuthSessionToken: []
      parameters:
        - $ref: "#/components/parameters/assessmentinfo"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/assessment"
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /organizationinfo:
    get:
      operationId: organizationinfo
      security:
        - PlutchikAuthOrganizationId: []
          PlutchikAuthOrganizationKey: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  name: 
                    type: string
                  keyname:
                    type: string
                  keyroles:
                    type: array
                    items: 
                      type: string
                  keyscount:
                    type: number
                  userscount:
                    type: number
                  contentcount:
                    type: number
                  assessmnetscount:
                    type: number
        '401':
          $ref: '#/components/responses/NotAuthorized'
security:
  - PlutchikAuthOrganizationId: []
    PlutchikAuthOrganizationKey: []
  - PlutchikAuthUserId: []
  - PlutchikAuthSessionToken: []
