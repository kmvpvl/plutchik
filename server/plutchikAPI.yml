openapi: '3.0.2'
info:
  title: Plutchik API
  version: '1.0'
servers:
  - url: http://localhost:8000
    description: Local server
  - url: https://plutchik.onrender.com
    description: Temporary free hosting to test changes
  - url: https://89bb-45-137-112-210.ngrok-free.app
    description: Test NGROK

components:
  securitySchemes:
    PlutchikTGUserId:
      type: apiKey
      in: header
      name: plutchik-tguid
    PlutchikAuthSessionToken:
      type: apiKey
      in: header
      name: plutchik-sessiontoken
    PlutchikAuthCode:
      type: apiKey
      in: header
      name: plutchik-authcode
    TGQueryCheckString:
      type: apiKey
      in: header
      name: plutchik-tgquerycheckstring
  schemas:
    version:
      type: object
      properties:
        api:
          type: string
          pattern: ^(\d+\.)?(\d+\.)?(\d+)$
        data:
          type: string
          pattern: ^(\d+\.)?(\d+\.)?(\d+)$
        ai:
          type: string
          pattern: ^(\d+\.)?(\d+\.)?(\d+)$
    user:
      type: object
      required:
        - tguserid
      properties:
        _id:
          type: string
          description: Uniq user's id at Plutchik
          pattern: ^[0-9a-fA-F]{24}$
        tguserid:
          type: number
        birthdate:
          type: string
          pattern: ^\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$
          description: Birthdate of user
        nativelanguage:
          type: string
          description: User's nativa language
        secondlanguages:
          description: All second or foreign languages of user
          type: array
          items:
            type: string
        location:
          description: Location of user (city, country of coord location) 
          type: string
        gender:
          description: User's gender (any trad gender or combination)
          type: string
        maritalstatus:
          type: string
          description: Marital status of user as one wants using
        features:
          type: string
        blocked:
          description: Is user banned?
          type: boolean
    organization:
      type: object
    contentitem:
      type: object
      properties:
        cid:
          description: Uniq id of content item
          type: string
          pattern: ^[0-9a-fA-F]{24}$
          nullable: true
        type:
          description: Type of content
          type: string
          enum: [text, audio, video, mem]
          nullable: false
        name:
          description: Content of item, can be HTML
          type: string
          nullable: true
        description:
          description: Content of item, can be HTML
          type: string
          nullable: true
        url:
          description: Reference to external content
          type: string
          nullable: true
        blocked:
          description: Is content blocked?
          type: boolean
          nullable: false
        expire:
          type: string
          pattern: ^((?:(\d{4}-\d{2}-\d{2})T(\d{2}:\d{2}:\d{2}(?:\.\d+)?))(Z|[\+-]\d{2}:\d{2})?)$
        validfrom:
          type: string
          pattern: ^((?:(\d{4}-\d{2}-\d{2})T(\d{2}:\d{2}:\d{2}(?:\.\d+)?))(Z|[\+-]\d{2}:\d{2})?)$
    assessment:
      type: object
      properties:
        uid:
          description: User uniq id
          type: string
          pattern: ^[0-9a-fA-F]{24}$
          nullable: true
        cid:
          type: string
          pattern: ^[0-9a-fA-F]{24}$
        vector:
          type: object
          properties:
            joy:
              type: number
              format: float
              minimum: 0
              maximum: 1
              nullable: true
            trust:
              type: number
              format: float
              minimum: 0
              maximum: 1
              nullable: true
            fear:
              type: number
              format: float
              minimum: 0
              maximum: 1
              nullable: true
            surprise:
              type: number
              format: float
              minimum: 0
              maximum: 1
              nullable: true
            disgust:
              type: number
              format: float
              minimum: 0
              maximum: 1
              nullable: true
            sadness:
              type: number
              format: float
              minimum: 0
              maximum: 1
              nullable: true
            anger:
              type: number
              format: float
              minimum: 0
              maximum: 1
              nullable: true
            anticipation:
              type: number
              format: float
              minimum: 0
              maximum: 1
              nullable: true
        created:
          type: string
          pattern: ^((?:(\d{4}-\d{2}-\d{2})T(\d{2}:\d{2}:\d{2}(?:\.\d+)?))(Z|[\+-]\d{2}:\d{2})?)$
  responses:
    NotFound:
      description: 'Not found'
      content:
        application/json:
          schema: {}
    NotAuthorized:
      description: 'Not authorized'
      content:
        application/json:
          schema: {}
  parameters:
    assessmentinfo:
      name: assessmentinfo
      in: query
      schema:
        $ref: "#/components/schemas/assessment"
      #explode: false
paths:
  /:
    head:
      description: For Render
      operationId: headAnswer
      security: []
      responses:
        '200': 
          description: OK
  /version:
    get:
      description: Reveal versions of components
      operationId: version
      security: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/version"
              example:
                api: 1.0.0
                data: 1.0.0
                ai: 0.0.1
  /tgcreateauthcode:
    post:
      description: Send to user auth code
      operationId: tgcreateauthcode
      security:
        - PlutchikTGUserId: []
      responses:
        '200':
          description: OK
  /createorganization:
    post:
      description: Creates new organization and returns first organization key with administrator roles
      operationId: createorganization
      responses:
        '200':
          description: OK
  /renameorganization:
    post:
      description: Rename organization (for administrators of org only)
      operationId: renameorganization
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - oid
              properties:
                oid:
                  type: string
                newname:
                  type: string
      responses:
        '200':
          description: OK
  /tggetsessiontoken:
    get:
      description: Returns session token by authorization
      operationId: tggetsessiontoken
      security: 
        - PlutchikTGUserId: []
          PlutchikAuthCode: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                pattern: ^[0-9a-fA-F]{24}$
                example:
                  63c12e625c80a49f1b08ad71
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /userinfo:
    description: Reveal user information
    post:
      operationId: userinfo
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /orgsattachedtouser:
    description: Reveal user information
    post:
      operationId: orgsattachedtouser
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /getorgcontent:
    description: Returns all content items of organization
    post:
      operationId: getorgcontent
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                oid:
                  type: string
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /getnextcontentitem:
    description: Reveals next content item for assessment
    post:
      operationId: getnextcontentitem
      responses:
        '200':
          description: OK
  /addcontent:
    description: Add new content item
    post:
      operationId: addcontent
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - contentinfo
              properties:
                contentinfo:
                  type: object
                groups:
                  type: object
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /addassessment:
    description: Add new assessment
    post:
      operationId: addassessment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/assessment"
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /getcontentstatistics:
    description: Returns statistics of content items' assesment
    post:
      operationId: getcontentstatistics
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - cid
              properties:
                cid:
                  type: string
      responses:
        '200':
          description: OK
  /getinsights:
    description: Returns insights data
    post:
      operationId: getinsights
      responses:
        '200':
          description: OK
  /reviewemotionaboveothers:
    description: Returns assessments of user. Own or by invitation id
    post:
      operationId: reviewemotionaboveothers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                emotion:
                  type: string
                invitationid:
                  type: string
                  nullable: true
              required:
                - emotion
      responses:
        '200':
          description: OK
  /getmatchlist:
    description: Returns users which closer to user by thier assessments
    post:
      operationId: getmatchlist
      responses:
        '200':
          description: OK
  /getusersassessedorganizationcontent:
    description: Returns all users who assessed at least one content item of organization with count of assessments
    post:
      operationId: getusersassessedorganizationcontent
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - oid
              properties:
                oid:
                  type: string
      responses:
        '200':
          description: OK
  /reminduseraboutinvitation:
    description: Informs user by Telegram, returns time when message scheduled
    post:
      operationId: reminduseraboutinvitation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - message
                - invitationid
              properties:
                invitationid:
                  type: string
                message:
                  type: string
      responses:
        '200':
          description: OK
  /requesttoassignorgtouser:
    description: Sends invitation to user assessing content of ogrganization. Role assessment_request required. Returned organization json
    post:
      operationId: requesttoassignorgtouser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - oid
                - tguserid
              properties:
                oid:
                  description: Organization id which assigned to user
                  type: string
                uid:
                  description: User who assigned assessing content of organization
                  type: string
      responses:
        '200':
          description: OK
  /getorganizationstats:
    description: Reveal stats of assesments of organization's content
    post:
      operationId: getorganizationstats
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                oid:
                  description: Organization id
                  type: string
      responses:
        '200': 
          description: OK
  /getinvitationstats:
    description: Reveals stats of invitation implementing. Role assessment_request required
    post:
      operationId: getinvitationstats
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - oid
                - invitation_id
              properties:
                oid:
                  description: Organization id which assigned to user
                  type: string
                invitation_id:
                  description: Invitation ID which sent to user ealier
                  type: string
      responses:
        '200':
          description: OK
  /telegram:
    post:
      operationId: telegram
      security: []
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/NotAuthorized'
security:
  - PlutchikTGUserId: []
    TGQueryCheckString: []
  - PlutchikTGUserId: []
    PlutchikAuthSessionToken: []
  - PlutchikTGUserId: []
    PlutchikAuthCode: []
