openapi: '3.0.2'
info:
  title: Plutchik API
  version: '1.0'
servers:
  - url: https://470282aa-075b-43ac-8f84-0dd31c013821.mock.pstmn.io
  - url: https://5dfbb146-c21e-4b30-b009-2b34abadefb3.mock.pstmn.io
    description: Server description

components:
  schemas:
    version:
      type: object
      properties:
        api:
          type: string
          pattern: ^(\d+\.)?(\d+\.)?(\d+)$
        data:
          type: string
          pattern: ^(\d+\.)?(\d+\.)?(\d+)$
        ai:
          type: string
          pattern: ^(\d+\.)?(\d+\.)?(\d+)$
    user:
      type: object
      properties:
        uid:
          type: string
          description: Uniq user's id at Plutchik
          format: uuid
          nullable: true
        organizationid:
          type: string
          format: uuid
          description: Uniq organization id at Plutchik
          nullable: false
        useridinorganization:
          type: string
          description: Uniq user's id at organization
        birthdate:
          type: string
          format: date
          description: Birthdate of user
          nullable: true
        nativelanguage:
          type: string
          description: User's nativa language
          nullable: true
        secondlanguages:
          description: All second or foreign languages of user
          type: array
          items:
            type: string
          nullable: true
        location:
          description: Location of user (city, country of coord location) 
          type: string
          nullable: true
        gender:
          description: User's gender (any trad gender or combination)
          type: string
          nullable: true
        maritalstatus:
          type: string
          description: Marital status of user as one wants using
          nullable: true
        features:
          type: string
          nullable: true
        blocked:
          description: Is user banned?
          type: boolean
          nullable: false
    contentitem:
      type: object
      properties:
        cid:
          description: Uniq id of content item
          type: string
          format: uuid
          nullable: true
        type:
          description: Type of content
          type: string
          enum: [text, audio, video, mem]
          nullable: false
        htmlcontent:
          description: Content of item, can be HTML
          type: string
          nullable: true
        href:
          description: Reference to external content
          type: string
          nullable: true
        blocked:
          description: Is content blocked?
          type: boolean
          nullable: false
        expiredate:
          type: string
          format: date-time
        validfrom:
          type: string
          format: date-time
        created:
          type: string
          format: date-time
        changed:
          type: string
          format: date-time
    assessment:
      type: object
      properties:
        eid:
          type: string
          format: uuid
        uid:
          type: string
          format: uuid
        cid:
          type: string
          format: uuid
        vector:
          type: object
          properties:
            joy:
              type: number
              format: float
              minimum: 0
              maximum: 1
            trust:
              type: number
              format: float
              minimum: 0
              maximum: 1
            fear:
              type: number
              format: float
              minimum: 0
              maximum: 1
            surprise:
              type: number
              format: float
              minimum: 0
              maximum: 1
            disgust:
              type: number
              format: float
              minimum: 0
              maximum: 1
            sadness:
              type: number
              format: float
              minimum: 0
              maximum: 1
            anger:
              type: number
              format: float
              minimum: 0
              maximum: 1
            anticipation:
              type: number
              format: float
              minimum: 0
              maximum: 1
        created:
          type: string
          format: date-time
  responses:
    NotFound:
      description: 'Not found'
      content:
        application/json:
          schema: {}
    NotAuthorized:
      description: 'Not authorized'
      content:
        application/json:
          schema: {}
  parameters:
    organizationid:
      name: organizationid
      in: header
      required: true
      description: Uniq organization id
      schema: 
        type: string
        format: uuid
    organizationkey:
      name: organizationkey
      in: header
      required: true
      description: Secret organization key
      schema: 
        type: string
        format: uuid
    sessiontoken:
      name: sessiontoken
      in: header
      required: true
      description: Session token
      schema:
        type: string
        format: uuid
    userinfo:
      name: userinfo
      in: query
      schema:
        $ref: "#/components/schemas/user"
    contentinfo:
      name: contentinfo
      in: query
      schema:
        $ref: "#/components/schemas/contentitem"
    assessmentinfo:
      name: assessmentinfo
      in: query
      schema:
        $ref: "#/components/schemas/assessment"
    uid: 
      name: uid
      in: path
      required: true
      description: Uniq user id
      schema:
        type: string
        format: uuid
    cid: 
      name: cid
      in: path
      required: true
      description: Uniq content id
      schema:
        type: string
        format: uuid
    eid: 
      name: eid
      in: path
      required: true
      description: Uniq assessment id
      schema:
        type: string
        format: uuid
paths:
  /version:
    get:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/version"
              example:
                api: 1.0.0
                data: 1.0.0.
                ai: 0.0.1
  /getsessiontoken:
    get:
      parameters:
        - $ref: "#/components/parameters/organizationid"
        - $ref: "#/components/parameters/organizationkey"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: uuid
                example:
                  urn:uuid:39c2c23c-5fa4-402b-4034-8b8f6cce36fd
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /adduser:
    description: Add new user to Plutchik
    post:
      tags:
        - user
        - new content
      parameters:
        - $ref: "#/components/parameters/userinfo"
        - $ref: "#/components/parameters/sessiontoken"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /userinfo{uid}:
    description: Reveal user information
    get:
      tags:
        - user
        - read
      parameters:
        - $ref: "#/components/parameters/uid"
        - $ref: "#/components/parameters/sessiontoken"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
              example:
                uid: urn:uuid:39c2c23c-5fa4-402b-4034-8b8f6cce36ff
                organizationid: urn:uuid:39c2c23c-5fa4-402b-4034-8b8f6cce36fe
                useridinorganization: 00000080880675
                birthdate: 1995-11-03
                nativelanguage: Polska
                secondlanguages: [english, german]
                location: Warsaw
                gender: female
                maritalstatus: single
                features: hobby, cats
                blocked: false
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /unblockuser/{uid}:
    get:
      parameters:
        - $ref: "#/components/parameters/sessiontoken"
        - $ref: "#/components/parameters/uid"
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /blockuser/{uid}:
    get:
      parameters:
        - $ref: "#/components/parameters/sessiontoken"
        - $ref: "#/components/parameters/uid"
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /addcontent:
    description: Add new content item
    post:
      parameters:
        - $ref: "#/components/parameters/contentinfo"
        - $ref: "#/components/parameters/sessiontoken"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contentitem"
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /getcontent/user/{uid}:
    description: Feed content to user
    get:
      parameters:
        - $ref: "#/components/parameters/sessiontoken"
        - $ref: "#/components/parameters/uid"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contentitem"
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /getcontent/{cid}:
    description: Reveal content by id
    get:
      parameters:
        - $ref: "#/components/parameters/sessiontoken"
        - $ref: "#/components/parameters/cid"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contentitem"
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /suggestcontenttomatchwith/{cid}/user/{uid}:
    description: Marks content to promote for all users about to match with user
    get:
      parameters:
        - $ref: "#/components/parameters/sessiontoken"
        - $ref: "#/components/parameters/cid"
        - $ref: "#/components/parameters/uid"
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /blockcontent/{cid}:
    get:
      parameters:
        - $ref: "#/components/parameters/sessiontoken"
        - $ref: "#/components/parameters/cid"
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /unblockcontent/{cid}:
    get:
      parameters:
        - $ref: "#/components/parameters/sessiontoken"
        - $ref: "#/components/parameters/cid"
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/NotAuthorized'
  /addassessment:
    description: Add new assessment
    post:
      parameters:
        - $ref: "#/components/parameters/assessmentinfo"
        - $ref: "#/components/parameters/sessiontoken"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/assessment"
        '401':
          $ref: '#/components/responses/NotAuthorized'